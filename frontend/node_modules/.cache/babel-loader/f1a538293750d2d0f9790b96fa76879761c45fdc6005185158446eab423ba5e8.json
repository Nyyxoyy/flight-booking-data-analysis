{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\Downloads\\\\flight-booking-analysis-ollama\\\\frontend\\\\src\\\\components\\\\VisualizationRenderer.jsx\";\nimport React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst detectChartType = (data, query) => {\n  if (!data || !data.length) return 'table';\n  const columns = Object.keys(data[0]);\n  if (columns.length !== 2) return 'table';\n\n  // Time series detection\n  const isDate = columns.some(col => col.toLowerCase().includes('date') || col.toLowerCase().includes('time'));\n  if (isDate) return 'line';\n\n  // Comparison detection\n  if (query.includes('compare')) return 'bar';\n\n  // Distribution detection\n  if (query.includes('distribution') || query.includes('percentage')) return 'pie';\n\n  // Default for two columns\n  return 'bar';\n};\nconst prepareChartData = (data, chartType) => {\n  const columns = Object.keys(data[0]);\n  const [labelCol, valueCol] = columns;\n  return data.map(row => {\n    const value = parseFloat(row[valueCol]) || 0;\n    if (chartType === 'line') {\n      return {\n        x: new Date(row[labelCol]).getTime(),\n        y: value,\n        name: new Date(row[labelCol]).toLocaleDateString()\n      };\n    }\n    return {\n      name: row[labelCol],\n      y: value\n    };\n  });\n};\nconst getChartOptions = (chartType, data, query) => {\n  const baseOptions = {\n    title: {\n      text: 'Query Results'\n    },\n    accessibility: {\n      enabled: false\n    },\n    credits: {\n      enabled: false\n    },\n    chart: {\n      type: chartType === 'line' ? 'line' : chartType === 'pie' ? 'pie' : 'column',\n      backgroundColor: 'transparent'\n    },\n    plotOptions: {\n      series: {\n        borderRadius: chartType === 'column' ? 4 : 0\n      }\n    }\n  };\n  if (chartType === 'pie') {\n    return {\n      ...baseOptions,\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: true,\n            format: '<b>{point.name}</b>: {point.y}'\n          }\n        }\n      },\n      series: [{\n        data\n      }]\n    };\n  }\n  if (chartType === 'line') {\n    return {\n      ...baseOptions,\n      xAxis: {\n        type: 'datetime'\n      },\n      series: [{\n        data\n      }]\n    };\n  }\n  return {\n    ...baseOptions,\n    xAxis: {\n      type: 'category'\n    },\n    series: [{\n      data\n    }]\n  };\n};\nexport default function VisualizationRenderer({\n  response\n}) {\n  const {\n    type,\n    data,\n    sql\n  } = response || {};\n  if (type === 'string') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-string\",\n      children: [data, sql && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sql-debug\",\n        children: [\"SQL: \", sql]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n  if (type === 'table') {\n    if (!Array.isArray(data)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"Invalid table data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 14\n      }, this);\n    }\n    const chartType = detectChartType(data, response.query);\n    const showChart = data.length > 0 && data.length < 1000 && chartType !== 'table';\n    const chartData = showChart ? prepareChartData(data, chartType) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-container\",\n      children: [showChart && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n          highcharts: Highcharts,\n          options: getChartOptions(chartType, chartData, response.query)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"response-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: data.length > 0 && Object.keys(data[0]).map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: col\n              }, col, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: data.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.values(row).map((val, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (val === null || val === void 0 ? void 0 : val.toString()) || 'â€”'\n              }, j, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this))\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), sql && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sql-debug\",\n        children: [\"SQL: \", sql]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"Unsupported response type: \", type]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 10\n  }, this);\n}\n_c = VisualizationRenderer;\nvar _c;\n$RefreshReg$(_c, \"VisualizationRenderer\");","map":{"version":3,"names":["React","Highcharts","HighchartsReact","jsxDEV","_jsxDEV","detectChartType","data","query","length","columns","Object","keys","isDate","some","col","toLowerCase","includes","prepareChartData","chartType","labelCol","valueCol","map","row","value","parseFloat","x","Date","getTime","y","name","toLocaleDateString","getChartOptions","baseOptions","title","text","accessibility","enabled","credits","chart","type","backgroundColor","plotOptions","series","borderRadius","pie","allowPointSelect","cursor","dataLabels","format","xAxis","VisualizationRenderer","response","sql","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","showChart","chartData","highcharts","options","i","values","val","j","toString","_c","$RefreshReg$"],"sources":["C:/Users/singh/Downloads/flight-booking-analysis-ollama/frontend/src/components/VisualizationRenderer.jsx"],"sourcesContent":["import React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nconst detectChartType = (data, query) => {\n  if (!data || !data.length) return 'table';\n  \n  const columns = Object.keys(data[0]);\n  if (columns.length !== 2) return 'table';\n\n  // Time series detection\n  const isDate = columns.some(col => \n    col.toLowerCase().includes('date') || \n    col.toLowerCase().includes('time')\n  );\n  if (isDate) return 'line';\n\n  // Comparison detection\n  if (query.includes('compare')) return 'bar';\n\n  // Distribution detection\n  if (query.includes('distribution') || query.includes('percentage')) return 'pie';\n\n  // Default for two columns\n  return 'bar';\n};\n\nconst prepareChartData = (data, chartType) => {\n  const columns = Object.keys(data[0]);\n  const [labelCol, valueCol] = columns;\n\n  return data.map(row => {\n    const value = parseFloat(row[valueCol]) || 0;\n    if (chartType === 'line') {\n      return {\n        x: new Date(row[labelCol]).getTime(),\n        y: value,\n        name: new Date(row[labelCol]).toLocaleDateString()\n      };\n    }\n    return {\n      name: row[labelCol],\n      y: value\n    };\n  });\n};\n\nconst getChartOptions = (chartType, data, query) => {\n  const baseOptions = {\n    title: { text: 'Query Results' },\n    accessibility: { enabled: false },\n    credits: { enabled: false },\n    chart: { \n      type: chartType === 'line' ? 'line' : \n            chartType === 'pie' ? 'pie' : 'column',\n      backgroundColor: 'transparent'\n    },\n    plotOptions: {\n      series: {\n        borderRadius: chartType === 'column' ? 4 : 0\n      }\n    }\n  };\n\n  if (chartType === 'pie') {\n    return {\n      ...baseOptions,\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: true,\n            format: '<b>{point.name}</b>: {point.y}'\n          }\n        }\n      },\n      series: [{ data }]\n    };\n  }\n\n  if (chartType === 'line') {\n    return {\n      ...baseOptions,\n      xAxis: { type: 'datetime' },\n      series: [{ data }]\n    };\n  }\n\n  return {\n    ...baseOptions,\n    xAxis: { type: 'category' },\n    series: [{ data }]\n  };\n};\n\nexport default function VisualizationRenderer({ response }) {\n  const { type, data, sql } = response || {};\n\n  if (type === 'string') {\n    return (\n      <div className=\"response-string\">\n        {data}\n        {sql && <div className=\"sql-debug\">SQL: {sql}</div>}\n      </div>\n    );\n  }\n\n  if (type === 'table') {\n    if (!Array.isArray(data)) {\n      return <div className=\"error\">Invalid table data</div>;\n    }\n\n    const chartType = detectChartType(data, response.query);\n    const showChart = data.length > 0 && data.length < 1000 && chartType !== 'table';\n    const chartData = showChart ? prepareChartData(data, chartType) : null;\n\n    return (\n      <div className=\"response-container\">\n        {showChart && (\n          <div className=\"chart-container\">\n            <HighchartsReact\n              highcharts={Highcharts}\n              options={getChartOptions(chartType, chartData, response.query)}\n            />\n          </div>\n        )}\n\n        <div className=\"response-table\">\n          <table>\n            <thead>\n              <tr>\n                {data.length > 0 && Object.keys(data[0]).map(col => (\n                  <th key={col}>{col}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((row, i) => (\n                <tr key={i}>\n                  {Object.values(row).map((val, j) => (\n                    <td key={j}>{val?.toString() || 'â€”'}</td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {sql && <div className=\"sql-debug\">SQL: {sql}</div>}\n      </div>\n    );\n  }\n\n  return <div className=\"error\">Unsupported response type: {type}</div>;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}