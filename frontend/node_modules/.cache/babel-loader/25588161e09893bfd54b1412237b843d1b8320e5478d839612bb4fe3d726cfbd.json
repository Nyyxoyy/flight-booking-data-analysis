{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport darkUnica from 'highcharts/themes/dark-unica';\nconst VisualizationRenderer = ({\n  response\n}) => {\n  _s();\n  const {\n    type,\n    data\n  } = response || {};\n  useEffect(() => {\n    if (document.documentElement.classList.contains('dark-mode')) {\n      darkUnica(Highcharts);\n    } else {\n      Highcharts.setOptions({\n        colors: ['#4361ee', '#3a0ca3', '#4895ef', '#4cc9f0', '#f72585', '#7209b7'],\n        chart: {\n          backgroundColor: 'transparent',\n          style: {\n            fontFamily: 'Inter, sans-serif'\n          }\n        },\n        title: {\n          style: {\n            color: '#2b2d42'\n          }\n        }\n      });\n    }\n  }, []);\n\n  // ... (rest of your existing VisualizationRenderer code)\n\n  const getChartOptions = (chartType, data) => {\n    const baseOptions = {\n      chart: {\n        type: chartType === 'line' ? 'line' : chartType === 'bar' ? 'column' : 'pie',\n        backgroundColor: 'transparent',\n        borderRadius: 8,\n        style: {\n          fontFamily: 'Inter, sans-serif'\n        }\n      },\n      title: {\n        text: 'Query Results',\n        style: {\n          color: 'var(--text-color)',\n          fontWeight: '600'\n        }\n      },\n      plotOptions: {\n        series: {\n          borderRadius: 4\n        }\n      },\n      accessibility: {\n        enabled: false\n      },\n      credits: {\n        enabled: false\n      }\n    };\n\n    // ... (rest of your chart options configuration)\n  };\n\n  // ... (rest of your component)\n};\n_s(VisualizationRenderer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = VisualizationRenderer;\nexport default VisualizationRenderer;\nvar _c;\n$RefreshReg$(_c, \"VisualizationRenderer\");","map":{"version":3,"names":["React","useEffect","Highcharts","HighchartsReact","darkUnica","VisualizationRenderer","response","_s","type","data","document","documentElement","classList","contains","setOptions","colors","chart","backgroundColor","style","fontFamily","title","color","getChartOptions","chartType","baseOptions","borderRadius","text","fontWeight","plotOptions","series","accessibility","enabled","credits","_c","$RefreshReg$"],"sources":["C:/Users/singh/Downloads/flight-booking-analysis-ollama/frontend/src/components/VisualizationRenderer.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport darkUnica from 'highcharts/themes/dark-unica';\n\nconst VisualizationRenderer = ({ response }) => {\n  const { type, data } = response || {};\n\n  useEffect(() => {\n    if (document.documentElement.classList.contains('dark-mode')) {\n      darkUnica(Highcharts);\n    } else {\n      Highcharts.setOptions({\n        colors: ['#4361ee', '#3a0ca3', '#4895ef', '#4cc9f0', '#f72585', '#7209b7'],\n        chart: {\n          backgroundColor: 'transparent',\n          style: {\n            fontFamily: 'Inter, sans-serif'\n          }\n        },\n        title: {\n          style: {\n            color: '#2b2d42'\n          }\n        }\n      });\n    }\n  }, []);\n\n  // ... (rest of your existing VisualizationRenderer code)\n\n  const getChartOptions = (chartType, data) => {\n    const baseOptions = {\n      chart: {\n        type: chartType === 'line' ? 'line' : \n              chartType === 'bar' ? 'column' : 'pie',\n        backgroundColor: 'transparent',\n        borderRadius: 8,\n        style: {\n          fontFamily: 'Inter, sans-serif'\n        }\n      },\n      title: {\n        text: 'Query Results',\n        style: {\n          color: 'var(--text-color)',\n          fontWeight: '600'\n        }\n      },\n      plotOptions: {\n        series: {\n          borderRadius: 4\n        }\n      },\n      accessibility: { enabled: false },\n      credits: { enabled: false }\n    };\n\n    // ... (rest of your chart options configuration)\n  };\n\n  // ... (rest of your component)\n};\n\nexport default VisualizationRenderer;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAOC,SAAS,MAAM,8BAA8B;AAEpD,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM;IAAEC,IAAI;IAAEC;EAAK,CAAC,GAAGH,QAAQ,IAAI,CAAC,CAAC;EAErCL,SAAS,CAAC,MAAM;IACd,IAAIS,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;MAC5DT,SAAS,CAACF,UAAU,CAAC;IACvB,CAAC,MAAM;MACLA,UAAU,CAACY,UAAU,CAAC;QACpBC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;QAC1EC,KAAK,EAAE;UACLC,eAAe,EAAE,aAAa;UAC9BC,KAAK,EAAE;YACLC,UAAU,EAAE;UACd;QACF,CAAC;QACDC,KAAK,EAAE;UACLF,KAAK,EAAE;YACLG,KAAK,EAAE;UACT;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,MAAMC,eAAe,GAAGA,CAACC,SAAS,EAAEd,IAAI,KAAK;IAC3C,MAAMe,WAAW,GAAG;MAClBR,KAAK,EAAE;QACLR,IAAI,EAAEe,SAAS,KAAK,MAAM,GAAG,MAAM,GAC7BA,SAAS,KAAK,KAAK,GAAG,QAAQ,GAAG,KAAK;QAC5CN,eAAe,EAAE,aAAa;QAC9BQ,YAAY,EAAE,CAAC;QACfP,KAAK,EAAE;UACLC,UAAU,EAAE;QACd;MACF,CAAC;MACDC,KAAK,EAAE;QACLM,IAAI,EAAE,eAAe;QACrBR,KAAK,EAAE;UACLG,KAAK,EAAE,mBAAmB;UAC1BM,UAAU,EAAE;QACd;MACF,CAAC;MACDC,WAAW,EAAE;QACXC,MAAM,EAAE;UACNJ,YAAY,EAAE;QAChB;MACF,CAAC;MACDK,aAAa,EAAE;QAAEC,OAAO,EAAE;MAAM,CAAC;MACjCC,OAAO,EAAE;QAAED,OAAO,EAAE;MAAM;IAC5B,CAAC;;IAED;EACF,CAAC;;EAED;AACF,CAAC;AAACxB,EAAA,CAzDIF,qBAAqB;AAAA4B,EAAA,GAArB5B,qBAAqB;AA2D3B,eAAeA,qBAAqB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}